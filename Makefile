# ... 
LD = ld

# ... 
CC = cc

# ... 
AS = as

# ... 
CFLAGS = -m32 -ffreestanding -fno-builtin -fno-exceptions -fno-stack-protector -Wall -Wextra -O2 -Iinclude

# ... 
LDFLAGS = -m elf_i386 -Tlink-i386-pc.ld

# ... 
ASFLAGS = --32

# ... 
OBJECTS = $(patsubst source/%.c,source/%.o,$(wildcard source/*.c)) $(patsubst source/%.S,source/%.o,$(wildcard source/*.S)) $(patsubst source/platform/i386-pc/%.c,source/platform/i386-pc/%.o,$(wildcard source/platform/i386-pc/*.c)) $(patsubst source/platform/i386-pc/%.S,source/platform/i386-pc/%.o,$(wildcard source/platform/i386-pc/*.S))
# ... 
.PHONY: all clean

# ... 
all: $(OBJECTS) phi-i386-pc.bin

# ... 
clean:
# ... 
	-rm source/*.o source/platform/i386-pc/*.o phi-i386-pc.bin

# ... 
phi-i386-pc.bin: $(OBJECTS)
# ... 
	$(LD) $(LDFLAGS) -o $@ $(OBJECTS)

# ... 
source/%.o:source/%.c
# ... 
	$(CC) $(CFLAGS) -c $< -o $@

# ... 
source/%.o:source/%.S
# ... 
	$(AS) $(ASFLAGS) $< -o $@

# ... 
source/platform/i386-pc/%.o:source/platform/i386-pc/%.c
# ... 
	$(CC) $(CFLAGS) -c $< -o $@

# ... 
source/platform/i386-pc/%.o:source/platform/i386-pc/%.S
# ... 
	$(AS) $(ASFLAGS) $< -o $@